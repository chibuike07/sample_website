Given a non-empty array, if there is a place to split
 the array so that the sum of the numbers on one
side is equal to the sum of the numbers on the 
other side return the length of the two arrays as an array but
if there is no place to split the array, return -1


canBalance([1, 1, 1, 2, 1]) → [3,2]
canBalance([2, 1, 1, 2, 1]) → -1
canBalance([10, 10]) → [1,1]



task 2//
Given an array of strings, return a Map<String, Integer> containing a key for every different string in the array,
 and the value is that string's length.


wordLen(["a", "bb", "a", "bb"]) → {"bb": 2, "a": 1}
wordLen(["this", "and", "that", "and"]) → {"that": 4, "and": 3, "this": 4}
wordLen(["code", "code", "code", "bug"]) → {"code": 4, "bug": 3}